<?php

namespace UGComponents\Http\Router;

use PHPUnit\Framework\TestCase;
use UGComponents\Http\Router;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:01.
 */
class Http_RouterTrait_Test extends TestCase
{
  /**
   * @var RouterTrait
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void
  {
    $this->object = new RouterTraitStub;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void
  {
  }

  /**
   * covers UGComponents\Http\RouterTrait::all
   */
  public function testAll()
  {
    $instance = $this->object->all('/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::delete
   */
  public function testDelete()
  {
    $instance = $this->object->delete('/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::get
   */
  public function testGet()
  {
    $instance = $this->object->get('/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::getRouter
   */
  public function testGetRouter()
  {
    $instance = $this->object->getRouter();
    $this->assertInstanceOf('UGComponents\Http\Router', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::post
   */
  public function testPost()
  {
    $instance = $this->object->post('/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::put
   */
  public function testPut()
  {
    $instance = $this->object->put('/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::route
   */
  public function testRoute()
  {
    $instance = $this->object->route('foobar', '/foo/bar', function() {});
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::setRouter
   */
  public function testSetRouter()
  {
    $instance = $this->object->setRouter(new Router);
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }

  /**
   * covers UGComponents\Http\RouterTrait::routeTo
   */
  public function testRouteTo()
  {
    $instance = $this->object->routeTo('get', 'foobar');
    $this->assertInstanceOf('UGComponents\Http\Router\RouterTraitStub', $instance);
  }
}

if(!class_exists('UGComponents\Http\Router\RouterTraitStub')) {
  class RouterTraitStub
  {
    use RouterTrait;
  }
}
