<?php

namespace UGComponents\IO\Request;

use PHPUnit\Framework\TestCase;
use UGComponents\Data\Registry;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-28 at 11:36:34.
 */
class StageTraitTest extends TestCase
{
  /**
   * @var StageTrait
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void
  {
    $this->object = new StageTraitStub;

    $this->object->set('stage', array(
      'foo' => 'bar',
      'bar' => 'foo'
    ));
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void
  {
  }

  /**
   * @covers UGComponents\IO\Request\StageTrait::getStage
   */
  public function testGetStage()
  {
    $this->assertEquals('bar', $this->object->getStage('foo'));
  }

  /**
   * @covers UGComponents\IO\Request\StageTrait::hasStage
   */
  public function testHasStage()
  {
    $this->assertTrue($this->object->hasStage('foo'));
    $this->assertFalse($this->object->hasStage('zoo'));
  }

  /**
   * @covers UGComponents\IO\Request\StageTrait::removeStage
   */
  public function testRemoveStage()
  {
    $this->object->removeStage('foo');
    $this->assertFalse($this->object->hasStage('foo'));
  }

  /**
   * @covers UGComponents\IO\Request\StageTrait::setSoftStage
   */
  public function testSetSoftStage()
  {
    $instance = $this->object->setSoftStage(array(
      'foo' => 'bar',
      'bar22' => 'zoo'
    ));

    $this->assertInstanceOf('UGComponents\IO\Request\StageTraitStub', $instance);
		$this->assertEquals('foo', $this->object->getStage('bar'));
  }

  /**
   * @covers UGComponents\IO\Request\StageTrait::setStage
   */
  public function testSetStage()
  {
    $instance = $this->object->setStage(array(
      'foo' => 'bar',
      'bar' => 'foo'
    ));

    $this->assertInstanceOf('UGComponents\IO\Request\StageTraitStub', $instance);
		$instance = $this->object->setStage('zoo');
    $this->assertInstanceOf('UGComponents\IO\Request\StageTraitStub', $instance);

    $instance = $this->object->setStage('zoo', 'foo', 'bar');
    $this->assertInstanceOf('UGComponents\IO\Request\StageTraitStub', $instance);
  }
}

if(!class_exists('UGComponents\IO\Request\StageTraitStub')) {
  class StageTraitStub extends Registry
  {
    use StageTrait;
  }
}
