<?php

namespace UGComponents\Data;

use ArrayAccess;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:10:59.
 */
class Data_ArrayAccessTrait_Test extends TestCase
{
  /**
   * @var ArrayAccessTrait
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(): void
  {
    $this->object = new ArrayAccessTraitStub;
		$this->object['foo'] = 'bar';
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(): void
  {
  }

  /**
   * @covers UGComponents\Data\ArrayAccessTrait::offsetExists
   */
  public function testOffsetExists()
  {
    $actual = isset($this->object['foo']);
	  $this->assertTrue($actual);
		
    $actual = isset($this->object['bar']);
	  $this->assertFalse($actual);
  }

  /**
   * @covers UGComponents\Data\ArrayAccessTrait::offsetGet
   */
  public function testOffsetGet()
  {
    $actual = $this->object['foo'];
	  $this->assertEquals('bar', $actual);
  }

  /**
   * @covers UGComponents\Data\ArrayAccessTrait::offsetSet
   */
  public function testOffsetSet()
  {
		$this->object['bar'] = 'foo';
    $actual = $this->object['bar'];
	  $this->assertEquals('foo', $actual);
  }

  /**
   * @covers UGComponents\Data\ArrayAccessTrait::offsetUnset
   */
  public function testOffsetUnset()
  {
		unset($this->object['foo']);
	  $this->assertFalse(isset($this->object['foo']));
  }
}

if(!class_exists('UGComponents\Data\ArrayAccessTraitStub')) {
	class ArrayAccessTraitStub implements ArrayAccess
	{
		use ArrayAccessTrait;
	}
}
